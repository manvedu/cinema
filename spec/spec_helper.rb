require 'rspec'
require 'shoulda-matchers'
require 'timecop'
require 'database_cleaner'
require 'pry'
#require File.join(File.dirname(__FILE__), '..')
 
require 'rack/test'
#require 'ruby-debug'
require_relative '../config/environment'
require_relative '../config/database'
ENV["RACK_ENV"] = 'test'

# required for rack-test for testing our app
MOVIE_APP = Rack::Builder.parse_file('config.ru').first
 
# set test environment
# This file was generated by the `rspec --init` command. Conventionally, all
# specs live under a `spec` directory, which RSpec adds to the `$LOAD_PATH`.
# Require this file using `require "spec_helper"` to ensure that it is only
# loaded once.
#
# See http://rubydoc.info/gems/rspec-core/RSpec/Core/Configuration
RSpec.configure do |config|
#puts "RACK ENV "*100
#puts ENV["RACK_ENV"]
#puts "db name "*100
#puts  ENV.fetch('DATABASE_NAME')
#puts "* "*200
  config.treat_symbols_as_metadata_keys_with_true_values = true
  config.run_all_when_everything_filtered = true
  config.filter_run :focus

  ##Config colorized
  config.failure_color = :magenta
  config.tty = true
  config.color = true

  # Run specs in random order to surface order dependencies. If you find an
  # order dependency and want to debug it, you can fix the order by providing
  # the seed, which is printed after each run.
  #     --seed 1234
  config.order = 'random'
# config.around(:each) do |example|
#   #DB.transaction(:rollback=>:always, :auto_savepoint=>true){example.run}
# end
  config.before(:each) do
    #existing_tables = Sequel::Model.db.tables
    #tables_to_preserve = [:schema_info, :schema_migrations]
    #tables_to_be_emptied = existing_tables - tables_to_preserve
    [ :reservations, :showtimes, :movies ].each do |table|
      Sequel::Model.db[table].delete
    end
  end
  # Configure database cleaner.
# config.before(:suite) do
#   #WebMock.allow_net_connect!
#   DatabaseCleaner[:sequel].strategy = :truncation
#   DatabaseCleaner[:sequel].clean_with(:truncation)
# end

# config.before(:each) do
#   DatabaseCleaner[:sequel].start
# end

# config.after(:each) do
#   DatabaseCleaner[:sequel].clean
# end

end

Shoulda::Matchers.configure do |config|
  config.integrate do |with|
    with.test_framework :rspec
  end
end
